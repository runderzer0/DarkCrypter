<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABgAAAAuAAAAPAAAADwAAAAuAAAAGAAA
        AAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAABgAAAAuAAAAPAAAADwAAAAuAAAAGAAAAAUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////8A///4AB//4AAH/8AAA/+AgQH/Ag
        BA/AQAIDgcADgYODwcEHh+HgD4fh8A+H4fAHh+Hgg4PBwYHAA4HAQAID8CAED/gIEB/8AAA//gAAf/+A
        Af//8A////////////////////////////8=
</value>
  </data>
</root>